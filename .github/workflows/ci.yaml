  name: Continuous Integration
  on:
    pull_request:
    push:
      branches:
        - main
  permissions: read-all
  jobs:
    system-tests:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get versions
        run: |
            docker-compose --version;
            docker --version;
      - name: Test basic example
        working-directory: system-tests/
        run: docker-compose -f docker-compose.yaml up --exit-code-from test-server
    unit-test:
      strategy:
        fail-fast: false
        matrix:
          node: ["10", "12", "14", "16"]
      runs-on: ubuntu-latest
      services:
        rabbitmq:
          image: rabbitmq:3
          ports:
            - 5672:5672
          env:
            RABBITMQ_DEFAULT_USER: username
            RABBITMQ_DEFAULT_PASS: password
        redis:
          image: redis
          options: >-
            --health-cmd "redis-cli ping"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      env:
        RUN_RABBITMQ_TESTS: 1
        TEST_RABBITMQ_HOST: "rabbitmq"
        TEST_RABBITMQ_PORT: 5672

        RUN_REDIS_TESTS: 1
        REDIS_HOST: redis
        REDIS_PORT: 6379

        RUN_AWS_TESTS: 1
      steps:
        - name: Checkout
          uses: actions/checkout@v1
        - uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node }}
        - name: Cache Dependencies
          uses: actions/cache@v3
          with:
            path: |
              node_modules
              package-lock.json
            key: ${{ runner.os }}-${{ matrix.node }}-${{ hashFiles('**/package.json') }}
        - name: Install Root Dependencies
          run: npm install --ignore-scripts
        - name: build
          run: npm run build
        - name: Unit tests
          run: npm run test
        - name: Generate code coverage
          run: npm run codecov
        - name: Upload coverage to Codecov
          uses: codecov/codecov-action@v2
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            directory: ./coverage
